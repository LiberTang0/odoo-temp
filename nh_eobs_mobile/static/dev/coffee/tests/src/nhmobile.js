// Generated by CoffeeScript 1.8.0
var NHMobile,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

NHMobile = (function(_super) {
  __extends(NHMobile, _super);

  NHMobile.prototype.process_request = function(verb, resource) {
    var req;
    req = new XMLHttpRequest();
    req.addEventListener('readystatechange', function() {
      var data, successResultCodes, _ref;
      if (req.readyState === 4) {
        successResultCodes = [200, 304];
        if (_ref = req.status, __indexOf.call(successResultCodes, _ref) >= 0) {
          data = eval('(' + req.responseText + ')');
          console.log('data message: ', data.message);
          return true;
        } else {
          new NHModal('data_error', 'Error while processing request', 'The server returned an error while processing the request. Please check your input and resubmit', ['<a href="#" data-action="close" data-target="data_error">Ok</a>'], 0, document.getElementsByTagName('body')[0]);
          return false;
        }
      } else {
        new NHModal('ajax_error', 'Error communicating with server', 'There was an error communicating with the server, please check your network connection and try again', ['<a href="#" data-action="close" data-target="ajax_error">Ok</a>'], 0, document.getElementsByTagName('body')[0]);
        return false;
      }
    });
    req.open(verb, resource, false);
    return req.send();
  };

  function NHMobile() {
    this.get_patient_info = __bind(this.get_patient_info, this);
    this.call_resource = __bind(this.call_resource, this);
    this.urls = frontend_routes;
    NHMobile.__super__.constructor.call(this);
  }

  NHMobile.prototype.call_resource = function(url_object, data) {
    return this.process_request(url_object.method, url_object.url, data);
  };

  NHMobile.prototype.get_patient_info = function(patient_id) {
    return this.process_request('GET', this.urls.json_patient_info(patient_id).url);
  };

  return NHMobile;

})(NHLib);

if (!window.NH) {
  window.NH = {};
}

if (typeof window !== "undefined" && window !== null) {
  window.NH.NHMobile = NHMobile;
}
